/*
  App
 */
 :root {
    --prompt-width: 50px;
    --cell-placeholder-opacity: 0.3;
  }
  
  @media print {
    * {
      box-shadow: none!important;
    }
    .status-bar{
      display: none!important;
    }
    .notifications-wrapper {
      display: none!important;
    }
    .cell-toolbar{
      display: none!important;
    }
    .cell-creator{
      display: none!important;
    }
  
  }
  
  #app {
    padding-top: 20px;
  }
  
  @keyframes fadeOut {
      from {opacity: 1.0;}
      to {opacity: 0.0;}
  }
  
  div#loading {
    animation-name: fadeOut;
    animation-duration: 0.25s;
    animation-fill-mode: forwards;
  }
  
  /*
    Globals
   */
  
  .cell pre
  {
      font-size: 14px;
      line-height: 1.21429em;
  
      word-wrap: break-word;
  }
  
  body
  {
      font-family: 'Source Sans Pro';
      font-size: 16px;
      line-height: 22px;
      background-color: var(--main-bg-color);
      color: var(--main-fg-color);
  }
  
  .cell img
  {
      display: block;
      max-width: 100%;
  }
  
  .cell table {
      border-collapse: collapse;
  }
  
  .cell th,
  .cell td {
      padding: 0.5em 1em;
      border: 1px solid var(--primary-border);
  }
  
  .cell th {
      text-align: left;
  }
  
  .cell blockquote{
    padding: .75em .5em .75em 1em;
    background: var(--main-bg-color);
    border-left: 0.5em solid #DDD;
  }
  
  .cell blockquote::before {
    display: block;
    height: 0;
    content: "â€œ";
    margin-left: -.95em;
    font: italic 400%/1 Open Serif,Georgia,"Times New Roman", serif;
    color: solid var(--primary-border);
  }
  
  /* for nested paragraphs in block quotes */
  .cell blockquote p {
    display: inline;
  }
  
  /*
    Notebook
   */
  
  .notebook {
      padding-top : 10px;
      padding-left: 10px;
      padding-right: 10px;
  }
  
  /*
    Cell
   */
  
  .draggable-cell {
      position: relative;
      padding: 10px;
  }
  
  .cell-drag-handle
  {
      position: absolute;
      z-index: 200;
      width: var(--prompt-width);
      height: 100%;
      cursor: move;
  }
  
  .cell {
      position: relative;
      background: var(--cell-bg);
      transition: all .1s ease-in-out;
  }
  
  .cell.focused {
      box-shadow: 3px 3px 9px rgba(0,0,0,.12), -3px -3px 9px rgba(0,0,0,.12);
  }
  
  .cell:focus .prompt,
  .cell.focused .prompt
  {
      background-color: var(--cell-bg-focus);
  }
  
  .cell-toolbar-mask
  {
      position: absolute;
      top: 0px;
      right: 0px;
      z-index: 99;
      height: 34px;
  
      /* Set the left padding to 50px to give users extra room to move their
      mouse to the toolbar without causing the cell to go out of focus and thus
      hide the toolbar before they get there. */
      padding: 0px 0px 0px 50px;
  }
  
  .cell-toolbar
  {
      display: inline-box;
      background-color: var(--toolbar-bg);
  }
  
  .cell-toolbar button
  {
      display: inline-block;
  
      width: 22px;
      height: 20px;
      padding: 0px 4px;
  
      text-align: center;
  
      border: none;
      outline: none;
      background: none;
  
  }
  
  .cell-toolbar button span
  {
      font-size: 15px;
      line-height: 1;
      color: var(--toolbar-button);
  
  }
  
  .cell.text .rendered
  {
      padding: 10px 10px 10px var(--prompt-width);
      outline: none;
  }
  
  .cell-placeholder {
      text-align: center;
      color: var(--main-fg-color);
      padding: 10px;
      opacity: var(--cell-placeholder-opacity);
  }
  
  .outputs>div
  {
      word-wrap: break-word;
      padding: 10px 10px 10px calc(var(--prompt-width) + 10px);
  }
  
  .outputs>div:empty
  {
      display:none;
  }
  
  .cell .input-container
  {
      display: flex;
      flex-direction: row;
  }
  
  .cell .input-container.invisible {
      height: 34px;
  }
  
  .cell .prompt
  {
      font-family: monospace;
      font-size: 12px;
  
      width: var(--prompt-width);
      padding: 9px 0;
  
      text-align: center;
  
      color: var(--input-color);
      background-color: var(--pager-bg);
  
      flex: 0 0 auto;
  }
  
  .cell .input-container .input
  {
      flex: 1 1 auto;
      overflow: auto;
  }
  
  .creator-hover-mask {
    display: block;
    position: relative;
    overflow: visible;
    height: 0px;
  }
  
  .creator-hover-region {
    display: flex;
    position: relative;
    overflow: visible;
    top: -30px;
    height: 60px;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    pointer-events: none;
  }
  
  .cell-creator {
    display: inline-block;
    background: var(--main-bg-color);
    box-shadow: 0 1px 2px 0 rgba(0,0,0,.50);
    margin-top: -15px;
    pointer-events: all;
  }
  
  .cell-creator button
  {
    display: inline-block;
  
    width: 22px;
    height: 20px;
    padding: 0px 4px;
  
    text-align: center;
  
    border: none;
    outline: none;
    background: none;
  }
  
  .cell-creator button span
  {
    font-size: 15px;
    line-height: 1;
  
    color: var(--toolbar-button);
  }
  
  .cell code {
    font-family: 'Source Code Pro';
    white-space: pre-wrap;
    font-size: 14px;
  }
  
  /*
      Codemirror
   */
  
  .CodeMirror
  {
      font-family: 'Source Code Pro';
      font-size: 14px;
      line-height: 20px;
  
      height: auto;
  
      background: none;
  }
  
  .CodeMirror-cursor
  {
      border-left-width: 1px;
      border-left-style: solid;
      border-left-color: var(--cm-color);
  }
  
  .CodeMirror-scroll
  {
      overflow-x: auto !important;
      overflow-y: hidden !important;
  }
  
  .CodeMirror-lines
  {
      padding: .4em;
  }
  
  .CodeMirror-linenumber
  {
      padding: 0 8px 0 4px;
  }
  
  .CodeMirror-gutters
  {
      border-top-left-radius: 2px;
      border-bottom-left-radius: 2px;
  }
  
  .CodeMirror pre
  {
      padding: 0;
  
      border: 0;
      border-radius: 0;
  }
  
  .cm-s-composition.CodeMirror {
      font-family: 'Source Code Pro', monospace;
      letter-spacing: 0.3px;
      word-spacing: 1px;
      background: var(--cm-background);
      color: var(--cm-color);
  }
  .cm-s-composition .CodeMirror-lines {
    padding: 10px;
  }
  .cm-s-composition .CodeMirror-gutters {
      box-shadow: 1px 0 2px 0 rgba(0, 0, 0, 0.5);
      -webkit-box-shadow: 1px 0 2px 0 rgba(0, 0, 0, 0.5);
      background-color: var(--cm-gutter-bg);
      padding-right: 10px;
      z-index: 3;
      border: none;
  }
  
  .cm-s-composition span.cm-comment { color: var(--cm-comment) }
  .cm-s-composition span.cm-keyword { line-height: 1em; font-weight: bold; color: var(--cm-keyword); }
  .cm-s-composition span.cm-string { color: var(--cm-string); }
  .cm-s-composition span.cm-builtin { line-height: 1em; font-weight: bold; color: var(--cm-builtin); }
  .cm-s-composition span.cm-special { line-height: 1em; font-weight: bold; color: var(--cm-special); }
  .cm-s-composition span.cm-variable { color: var(--cm-variable); }
  .cm-s-composition span.cm-number, .cm-s-composition span.cm-atom { color: var(--cm-number); }
  .cm-s-composition span.cm-meta { color: var(--cm-meta); }
  .cm-s-composition span.cm-link { color: var(--cm-link); }
  .cm-s-composition span.cm-operator { color: var(--cm-operator); }
  .cm-s-composition span.cm-def { color: var(--cm-def); }
  .cm-s-composition .CodeMirror-activeline-background { background: var(--cm-activeline-bg); }
  .cm-s-composition .CodeMirror-matchingbracket { border-bottom: 1px solid var(--cm-matchingbracket-outline); color: var(--cm-matchingbracket-color) !important; }
  
  /* Overwrite some of the hint Styling */
  
  .CodeMirror-hints {
    -webkit-box-shadow: 2px 3px 5px rgba(0,0,0,.2);
    -moz-box-shadow: 2px 3px 5px rgba(0,0,0,.2);
    box-shadow: 2px 3px 5px rgba(0,0,0,.2);
    border-radius: 0px;
    border: none;
    padding:0;
  
    background: var(--cm-hint-bg);
    font-size: 90%;
    font-family: 'Source Code Pro', monospace;
  
    overflow-y: auto;
  }
  
  .CodeMirror-hint {
    border-radius: 0px;
    white-space: pre;
    cursor: pointer;
    color: var(--cm-hint-color);
  }
  
  li.CodeMirror-hint-active {
    background: var(--cm-hint-bg-active);
    color: var(--cm-hint-color-active);
  }
  
  .dropdown {
      display: inline-block;
  }
  
  .dropdown__content {
      display: none;
      opacity:  1.0;
      position: absolute;
      top: 0.2em;
      right: 0;
      border-style: none;
      padding: 0;
      font-size: 11px;
      line-height: 1.5;
      margin: 20px 0;
      background-color: var(--dropdown-content);
  }
  
  .dropdown__content ul {
      list-style: none;
      text-align: left;
      padding: 0;
      margin: 0;
      opacity: 1.0;
  }
  
  .dropdown__content li {
    padding: 0.5rem;
  }
  
  .dropdown--active .dropdown__content {
      display: inline-block;
      opacity: 1.0;
  }
  
  /*
   * The following were written to help with the R kernel formatting. We need to
   * write something general for nested HTML like the R kernel does for data
   */
  
  .cell dd {
      display: block;
      -webkit-margin-start: 40px
  }
  .cell dl {
      display: block;
      -webkit-margin-before: 1__qem;
      -webkit-margin-after: 1em;
      -webkit-margin-start: 0;
      -webkit-margin-end: 0;
  }
  
  .cell dt {
      display: block
  }
  
  .cell dl {
    width: 100%;
    overflow: hidden;
    padding: 0;
    margin: 0
  }
  
  .cell dt {
    font-weight: bold;
    float: left;
    width: 20%;
    /* adjust the width; make sure the total of both is 100% */
    padding: 0;
    margin: 0
  }
  
  .cell dd {
    float: left;
    width: 80%;
    /* adjust the width; make sure the total of both is 100% */
    padding: 0;
    margin: 0
  }
  
  /* No dangling (1.) */
  .cell li:only-child {
    list-style-type: none;
  }
  
  .list-inline li {
    display: inline;
    padding-right: 20px;
    text-align: center;
  }
  
  /* End R Kernel adaptations */
  
  /* Styling for status bar */
  .pull-right {
      float: right;
      padding-right: 10px;
  }
  
  .pull-left {
      display: block;
      padding-left: 10px;
  }
  
  .status-bar {
      position: fixed;
      bottom: 0;
      width: 100%;
      font-size: 12px;
      line-height: 0.5em;
      background: var(--status-bar);
      z-index: 99;
  }
  